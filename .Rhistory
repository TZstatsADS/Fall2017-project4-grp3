rm(term4)
speeches = speeches[order(as.Date(speeches$date, format="%m/%d/%Y")),]
rownames(speeches) = NULL
InaugurationInfo <- read_excel("~/ADS/fall2017-project1-lwcj/data/InaugurationInfo.xlsx")
InaugurationInfo$File = paste(InaugurationInfo$File, InaugurationInfo$Term, sep="-")
InaugurationInfo = InaugurationInfo[,c(2, 4)]
colnames(InaugurationInfo) = c('document', 'party')
speeches = left_join(speeches, InaugurationInfo)
rm(InaugurationInfo)
speech_words <- speeches %>% unnest_tokens(word, content) %>% count(document, word, sort = TRUE) %>% ungroup()
total_words <- speech_words %>% group_by(document) %>% summarize(total = sum(n))
speech_words <- left_join(speech_words, total_words)
speech_words <- speech_words %>% bind_tf_idf(word, document, n)
# sort by descending tf_idf
speech_words %>% select(-total) %>% arrange(desc(tf_idf))
# plot the tfidf
plot_speech <- speech_words %>% arrange(desc(tf_idf)) %>% mutate(word = factor(word, levels = rev(unique(word))))
plot_speech %>% top_n(50) %>% ggplot(aes(word, tf_idf, fill = document)) + geom_col() + labs(x = NULL, y = "tf-idf") + coord_flip() + ggsave("./../figs/tfidf.png", width = 8, height=8, dpi = 100)
# use last 10 inaugurations
ds <- tail(speeches$document, 10)
nrc <- get_sentiments("nrc")
for (d in ds){
nrcsent <- speech_words %>% filter(document == d) %>% inner_join(nrc) %>% count(word, sort = TRUE)
print(head(nrcsent, 10))
}
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
# we build onto the stopwords list with other words that don't hold too much meaning in this context, as well as words that are too common (people, government)
stops = c(stopwords("english"), "will", "people", "government", "can", "must", "great"
, "upon", "shall", "may", "us")
documents <- Corpus(VectorSource(speeches$content))
documents <- tm_map(documents, content_transformer(tolower))
documents <- tm_map(documents, removePunctuation)
documents <- tm_map(documents, removeWords, stops)
speeches$cleaned = documents$content
speech_words2 <- speeches %>% unnest_tokens(word, cleaned) %>% count(document, word, sort = TRUE) %>% ungroup()
total_words2 <- speech_words2 %>% group_by(document) %>% summarize(total = sum(n))
speech_words2 <- left_join(speech_words2, total_words2)
inaug_dtm <- speech_words2 %>% cast_dtm(document, word, n)
inaug_lda <- LDA(inaug_dtm, k = 4, control = list(seed=1234))
inaug_topics <- tidy(inaug_lda, matrix = "beta")
inaug_top_terms <- inaug_topics %>%
group_by(topic) %>%
top_n(20, beta) %>%
ungroup() %>%
arrange(topic, -beta)
inaug_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() + ggsave("./../figs/topics.png", width = 8, height=8, dpi = 100)
beta_spread <- inaug_topics %>%
mutate(topic = paste0("topic", topic)) %>%
spread(topic, beta) %>%
filter(topic1 > .001 | topic2 > .001) %>%
mutate(log_ratio21 = log2(topic2 / topic1)) %>%
mutate(log_ratio31 = log2(topic3 / topic1)) %>%
mutate(log_ratio41 = log2(topic4 / topic1)) %>%
mutate(log_ratio32 = log2(topic3 / topic2)) %>%
mutate(log_ratio42 = log2(topic4 / topic2)) %>%
mutate(log_ratio43 = log2(topic4 / topic3))
head(beta_spread[order(beta_spread$log_ratio21, decreasing = TRUE),])
head(beta_spread[order(beta_spread$log_ratio43, decreasing = TRUE),])
# Only look at the two parties
speechesdr = speeches[which(speeches$party == "Democratic" | speeches$party == "Republican"),]
doc_matrix <- create_matrix(speechesdr$cleaned, language="english", removeNumbers=TRUE,
stemWords=TRUE, removeSparseTerms=.9)
container <- create_container(doc_matrix, speechesdr$party, trainSize=1:35,
testSize=35:46, virgin=FALSE)
SVM <- train_model(container,"SVM")
GLMNET <- train_model(container,"GLMNET")
MAXENT <- train_model(container,"MAXENT")
SVM_CLASSIFY <- classify_model(container, SVM)
GLMNET_CLASSIFY <- classify_model(container, GLMNET)
MAXENT_CLASSIFY <- classify_model(container, MAXENT)
probs = cbind(speechesdr$document[35:46], speechesdr$party[35:46], SVM_CLASSIFY, GLMNET_CLASSIFY, MAXENT_CLASSIFY)
colnames(probs) = c('document', 'party', 'SVM_LABEL', 'SVM_PROB', 'GLMNET_LABEL', 'GLMNET_PROB', 'MAXENTROPY_LABEL', 'MAXENTROPY_PROB')
print(paste('SVM accuracy: ', sum(probs$party == probs$SVM_LABEL)/length(probs$party)))
print(paste('GLMNET accuracy: ', sum(probs$party == probs$GLMNET_LABEL)/length(probs$party)))
print(paste('MAXENT accuracy: ', sum(probs$party == probs$MAXENTROPY_LABEL)/length(probs$party)))
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=10)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=10)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
opts(legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.background = theme_rect(colour = NA, fill = "white"),
title="Deltas of sentiment")
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
opts(legend.position = c(0, 1),
legend.justification = c(0, 1),
legend.background = theme_rect(colour = NA, fill = "white"),
title="Deltas of sentiment") +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.9,.75)
) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.9,.75),
legend.text=element_text(size=4)
) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.9,.75),
legend.text=element_text(size=4)
) +
scale_size(range=c(5,20)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.9,.75),
legend.text=element_text(size=4)
) +
scale_size(range=c(5,5)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 8, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.9,.75),
legend.text=element_text(size=4)
) +
scale_size(range=c(5,5)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=12, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.text=element_text(size=4)
) +
scale_size(range=c(5,5)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=12, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.text=element_text(size=4),
title = "Deltas of Sentiment"
) +
scale_size(range=c(5,5)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=12, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.text=element_text(size=4)
) +
labs(title = "Deltas of Sentiment")
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=12, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
labs(title = "Deltas of Sentiment") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 8, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.text=element_text(size=4)
) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=12, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
labs(title = "Deltas of Sentiment") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 12, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=8, dpi = 100)
speech_words = left_join(speech_words, speeches[,c(1, 3)])
afinn <- speech_words %>%
inner_join(get_sentiments("afinn")) %>%
group_by(index = date) %>%
summarise(sentiment = sum(score)) %>%
mutate(method = "AFINN")
afinn$delta = c(NA, diff(afinn$sentiment))
colnames(afinn) <- c('date', 'sentiment', 'method', 'delta')
afinn = left_join(afinn, speeches[,c(3,4)])
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), sentiment, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
labs(title = "Sentiment over time") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentiment.png", width = 12, height=8, dpi = 100)
ggplot(afinn, aes(as.Date(date, format="%m/%d/%Y"), delta, fill = party)) +
geom_col(show.legend = TRUE) +
theme(legend.text=element_text(size=6)) +
facet_wrap(~method, ncol = 1, scales = "free_y") +
scale_x_discrete(name ="year") +
labs(title = "Deltas of sentiment") +
scale_fill_manual(values=c("blue", "purple", "black", "grey", "red", "gold")) + ggsave("./../figs/sentimentdelta.png", width = 12, height=8, dpi = 100)
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
aa
setwd("~/ADS/fall2017-project4-grrp3")
movie.data.train <- read.csv("../data/movie_data_train.csv")
movie.data.train <- read.csv("data/movie_data_train.csv")
movie.data.train <- read.csv("data/movie_data_train.csv")
head(movie.data.train)
movie.data.train <- movie.data.train[,-1]
paste("Data Dimension:", dim(movie.data.train)[1], "x", dim(movie.data.train)[2])
paste("Number of Unique Movies:",length(unique(movie.data.train[,2])))
paste("Number of Unique Users:",length(unique(movie.data.train[,3])))
paste("Number of 0 ratings:", sum(movie.data.train[,4] == 1))
movie.data.train <- reshape(movie.data.train,
v.names = "Score",
direction = "wide",
idvar = "User",
timevar = "Movie")
head(movie.data.train)
View(movie.data.train)
movie.data.train[is.na(movie.data.train)] <- 0
movie.data.train[movie.data.train < 4] <- 0
load("~/ADS/fall2017-project4-grrp3/data/movie_data_train_wide.Rdata")
movie.data.train[is.na(movie.data.train)] <- 0
movie.data.train[:-1][movie.data.train[:-1] < 4] <- 0
movie.data.train[,-1][movie.data.train[,-1] < 4] <- 0
movie.data.train[,-1][movie.data.train[,-1] > 4] <- 1
View(movie.data.train)
movie.data.train[,-1][movie.data.train[,-1] >= 4] <- 1
pacman::p_load(text2vec, dplyr, qlcMatrix, kernlab, knitr)
#Read raw data files
read.movie.data = F
read.ms.data = F
#Reshape data to wide format
reshape.movie = F
reshape.ms = F
#Load Rdata
load.movie.data = T
load.ms.data = T
#Implementation algorythims
model.clustering = T
dim(movie.data.train)
dim(movie.data.train)[1]
dim(movie.data.train)[2]
diag(dim(movie.data.train)[1])
diag(2)
movie.data.train[,1]
colnames(movie.data.train[,-1])
len(colnames(movie.data.train[,-1]))
length(colnames(movie.data.train[,-1]))
match(1, movie.data.train[,1])
match(200, movie.data.train[,1])
match(20, movie.data.train[,1])
match(16, movie.data.train[,1])
View(movie.data.train)
